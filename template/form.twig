{% extends 'layout/base.twig' %}

{% block title %}{{ page_title|default('Formulaire') }} - Docker Management Portal{% endblock %}

{% block content %}
<div class="container-fluid px-4 py-3">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-7 col-xl-6">
            <div class="card shadow-sm mb-4">
                <div class="card-body p-4">
                    {% if errors is defined and errors|length > 0 %}
                        <div class="alert alert-danger mb-4">
                            <ul class="mb-0">
                                {% for error in errors %}
                                    <li>{{ error }}</li>
                                {% endfor %}
                            </ul>
                        </div>
                    {% endif %}
                    
                    {{ form | raw }}
                </div>
            </div>
            
            {% if comments is defined and comments|length > 0 %}
                {% for comment in comments %}
                    <div class="card mb-3">
                        <div class="card-body">
                            <p class="card-text">{{ comment }}</p>
                        </div>
                    </div>
                {% endfor %}
            {% endif %}
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Add Bootstrap classes to form elements that may have been generated by PHP
        const formElements = document.querySelectorAll('form input, form select, form textarea');
        formElements.forEach(element => {
            if (element.classList.contains('form-control') || element.classList.contains('form-select')) {
                return; // Already has Bootstrap classes
            }
            
            if (element.tagName === 'SELECT') {
                element.classList.add('form-select');
            } else if (element.type === 'checkbox' || element.type === 'radio') {
                element.classList.add('form-check-input');
                
                // Wrap checkbox in form-check div if not already
                const parentLabel = element.closest('label');
                if (parentLabel) {
                    if (!parentLabel.classList.contains('form-check-label')) {
                        parentLabel.classList.add('form-check-label');
                        
                        // Find parent div to add form-check class
                        const parentDiv = parentLabel.parentElement;
                        if (parentDiv && parentDiv.tagName === 'DIV') {
                            parentDiv.classList.add('form-check');
                        }
                    }
                }
            } else {
                element.classList.add('form-control');
            }
        });
        
        // Handle environment variable selection
        const envIdSelect = document.querySelector('#envId');
        if (envIdSelect) {
            envIdSelect.addEventListener('change', function() {
                const selectedValue = this.value;
                const parts = selectedValue.split('=');
                
                if (parts.length === 2) {
                    const envNameField = document.querySelector('#envName');
                    const envValueField = document.querySelector('#envValue');
                    
                    if (envNameField) {
                        envNameField.value = parts[0];
                    }
                    
                    if (envValueField) {
                        envValueField.value = parts[1];
                    }
                }
            });
            
            // Trigger change event on page load if a value is already selected
            if (envIdSelect.value) {
                envIdSelect.dispatchEvent(new Event('change'));
            }
        }
        
        // Add modern button styling
        const buttons = document.querySelectorAll('form button[type="submit"]');
        buttons.forEach(button => {
            if (!button.classList.contains('btn')) {
                button.classList.add('btn', 'btn-primary', 'mt-3');
            }
        });
        
        // Add password visibility toggle for password fields
        const passwordFields = document.querySelectorAll('input[type="password"]');
        passwordFields.forEach(field => {
            const parent = field.parentElement;
            
            // Create wrapper div
            const wrapper = document.createElement('div');
            wrapper.className = 'input-group';
            
            // Create toggle button
            const toggleBtn = document.createElement('button');
            toggleBtn.className = 'btn btn-outline-secondary';
            toggleBtn.type = 'button';
            toggleBtn.innerHTML = '<i class="fas fa-eye"></i>';
            toggleBtn.addEventListener('click', function() {
                if (field.type === 'password') {
                    field.type = 'text';
                    toggleBtn.innerHTML = '<i class="fas fa-eye-slash"></i>';
                } else {
                    field.type = 'password';
                    toggleBtn.innerHTML = '<i class="fas fa-eye"></i>';
                }
            });
            
            // Replace the field with the wrapper + field + button
            field.parentNode.insertBefore(wrapper, field);
            wrapper.appendChild(field);
            wrapper.appendChild(toggleBtn);
        });
    });
</script>
{% endblock %}